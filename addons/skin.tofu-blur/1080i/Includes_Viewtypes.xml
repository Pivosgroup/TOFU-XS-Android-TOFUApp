<?xml version="1.0" encoding="utf-8"?>
<includes>
	<include name="Furniture_Showcase">
		<control type="group">
			<include>Animation_OpenClose_Furniture</include>
			<include>Animation_VisibleChange400</include>
			<animation effect="slide" end="0,400" time="560" tween="quadratic" condition="Control.HasFocus(109)">Conditional</animation>
			<visible>![Control.IsVisible(57) | Control.IsVisible(501) | Control.IsVisible(503) | Control.IsVisible(508) | Control.IsVisible(509) | Control.IsVisible(510) | Control.IsVisible(511) | Control.IsVisible(516)]</visible>
			<control type="image">
				<posy>900</posy>
				<width>1920</width>
				<height>180</height>
				<texture>views/fade.png</texture>
				<colordiffuse>$VAR[PanelColorVar]</colordiffuse>
			</control>
		</control>
		<control type="group" id="8857">
			<include>Animation_OpenClose_Furniture</include>
			<include>Animation_VisibleChange400</include>
			<animation effect="slide" end="0,400" time="560" tween="quadratic" condition="Control.HasFocus(109)">Conditional</animation>
			<visible>Control.IsVisible(57) | Control.IsVisible(501) | Control.IsVisible(503) | Control.IsVisible(508) | Control.IsVisible(509) | Control.IsVisible(510)</visible>
			<control type="image">
				<posy>472</posy>
				<width>1920</width>
				<height>608</height>
				<texture>views/showcase_floor.png</texture>
				<colordiffuse>$VAR[PanelColorVar]</colordiffuse>
			</control>
		</control>
	</include>
	<include name="FloorLabels">
		<control type="group">
			<animation effect="fade" end="100" time="80" delay="80" reversible="false">Visible</animation>
			<animation effect="fade" start="100" end="0" time="0" reversible="false">Hidden</animation>
			<visible>[Control.IsVisible(503) + Skin.HasSetting(landscapeonelogo) + !Container.Content(episodes) + !Container.Content(seasons)] | Control.IsVisible(509) | [Control.IsVisible(500) + !StringCompare(Container.FolderName,youtube)] | Control.IsVisible(508) | Control.IsVisible(501)</visible>
			<include>Animation_WindowFade200</include>
			<visible>[Control.IsVisible(8822) + !Container.OnNext + !Container.OnPrevious + Stringcompare(Control.GetLabel(8822),empty.png)] | !Control.IsVisible(8822) | Container.Content(seasons) | Container.Content(albums)</visible>
			<posx>480</posx>
			<control type="label">
				<posx>0</posx>
				<posy>1046</posy>
				<width>960</width>
				<height>28</height>
				<align>center</align>
				<label>$VAR[SecondLabelVar]</label>
				<font>Font_Reg28_Caps</font>
				<visible>![Control.HasFocus(61) | Control.IsVisible(4050)]</visible>
				<include>Animation_VisibleChange400</include>
			</control>
			<control type="label">
				<posx>0</posx>
				<posy>1000</posy>
				<width>960</width>
				<height>49</height>
				<align>center</align>
				<label>$VAR[FirstLabelVar]</label>
				<font>Font_ShowcaseMainLabel2_Caps</font>
				<scroll>true</scroll>
				<scrollspeed>30</scrollspeed>
			</control>
		</control>
	</include>
	<include name="Furniture_DarkGradient">
		<control type="image" id="4050">
			<visible>Container.Scrolling</visible>
			<animation effect="fade" end="100" time="0" delay="2400">Visible</animation>
			<animation effect="fade" time="800">Hidden</animation>
		</control>
		<control type="scrollbar" id="61">
			<posx>465</posx>
			<posy>1035</posy>
			<height>40</height>
			<width>975</width>
			<visible>Control.IsVisible(509) | Control.IsVisible(508) | Control.IsVisible(500) | Control.IsVisible(501) | Control.IsVisible(57) | Control.IsVisible(510) | Control.IsVisible(503)</visible>
			<animation effect="fade" start="100" end="0" time="320" condition="![Control.HasFocus(61) | Control.IsVisible(4050)]">Conditional</animation>
			<onup>50</onup>
			<orientation>horizontal</orientation>
			<animation effect="zoom" start="70" end="100" center="auto" tween="back" time="320" condition="Control.HasFocus(61) | Control.IsVisible(4050)">Conditional</animation>
			<texturesliderbar>-</texturesliderbar>
			<texturesliderbarfocus>-</texturesliderbarfocus>
			<textureslidernib>views/scrollbarnub-nofocus.png</textureslidernib>
			<textureslidernibfocus>views/scrollbarnub-focus.png</textureslidernibfocus>
			<texturesliderbackground border="12,0,12,0">views/scrollbarbacklist2.png</texturesliderbackground>
			<ondown condition="!Control.IsVisible(500)">109</ondown>
			<ondown condition="Control.IsVisible(500)">50</ondown>
		</control>
		<control type="button" id="109">
			<include>HiddenObject</include>
			<onup>50</onup>
			<ondown>50</ondown>
			<onleft>50</onleft>
			<onright>50</onright>
			<onclick>SetFocus(50)</onclick>
			<onback>50</onback>
		</control>
		<control type="group">
			<posx>20</posx>
			<posy>-1020</posy>
			<visible>Control.HasFocus(109)</visible>
			<include>Animation_WindowFade200</include>
			<animation type="Visible">
				<effect type="zoom" start="150" end="100" center="960,540" time="400" tween="cubic" />
				<effect type="fade" end="100" time="240" />
			</animation>
			<animation type="Hidden">
				<effect type="fade" start="100" end="0" time="240" />
				<effect type="zoom" start="100" end="130" center="960,540" time="240" tween="cubic" easing="in" />
			</animation>
			<control type="image">
				<width>130</width>
				<height>80</height>
				<texture border="5">panel.png</texture>
				<animation effect="fade" end="60" time="0" condition="true">Conditional</animation>
				<colordiffuse>$VAR[PanelColorVar]</colordiffuse>
			</control>
			<control type="label">
				<posx>15</posx>
				<width>100</width>
				<height>74</height>
				<align>center</align>
				<label>31888</label>
				<font>Font_Reg22</font>
				<wrapmultiline>true</wrapmultiline>
			</control>
		</control>
	</include>
	<include name="WallPanel">
		<control type="group">
			<include>Animation_Widgets</include>
			<animation effect="fade" end="100" time="160">Visible</animation>
			<animation effect="fade" start="100" end="0" time="160">Hidden</animation>
			<visible>[Control.IsVisible(512) + !Skin.HasSetting(addonwallaltbackground)] | [Control.IsVisible(500) + !Skin.HasSetting(wallfullscreen)] | [Control.IsVisible(518) + !Skin.HasSetting(infopanelbackground)]</visible>
			<control type="group">
				<control type="image">
					<posx>126</posx>
					<posy>73</posy>
					<animation effect="zoom" start="126,73,1672,908" end="38,73,1845,908" time="240" condition="Control.IsVisible(512)">Conditional</animation>
					<animation effect="zoom" start="126,73,1672,908" end="148,73,1629,938" time="240" condition="Control.IsVisible(518)">Conditional</animation>
					<width>1672</width>
					<height>908</height>
					<texture border="5">panel.png</texture>
					<colordiffuse>$VAR[PanelColorVar]</colordiffuse>
				</control>
			</control>
		</control>
	</include>
	<include name="OverlayVisibility-7">
		<texture>$INFO[ListItem(-7).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-7).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-7).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-7).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-7).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-7).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility-6">
		<texture>$INFO[ListItem(-6).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-6).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-6).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-6).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-6).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-6).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility-5">
		<texture>$INFO[ListItem(-5).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-5).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-5).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-5).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-5).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-5).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility-4">
		<texture>$INFO[ListItem(-4).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-4).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-4).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-4).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-4).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-4).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility-3">
		<texture>$INFO[ListItem(-3).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-3).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-3).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-3).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-3).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-3).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility-2">
		<texture>$INFO[ListItem(-2).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-2).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-2).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-2).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-2).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-2).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility-1">
		<texture>$INFO[ListItem(-1).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-1).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-1).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-1).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-1).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-1).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility0">
		<texture>$INFO[ListItem(0).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(0).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(0).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(0).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(0).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(0).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility1">
		<texture>$INFO[ListItem(1).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(1).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(1).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(1).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(1).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(1).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility2">
		<texture>$INFO[ListItem(2).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(2).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(2).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(2).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(2).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(2).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility3">
		<texture>$INFO[ListItem(3).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(3).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(3).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(3).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(3).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(3).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility4">
		<texture>$INFO[ListItem(4).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(4).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(4).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(4).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(4).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(4).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility5">
		<texture>$INFO[ListItem(5).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(5).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(5).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(5).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(5).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(5).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility6">
		<texture>$INFO[ListItem(6).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(6).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(6).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(6).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(6).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(6).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility7">
		<texture>$INFO[ListItem(7).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(7).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(7).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(7).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(7).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(7).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility8">
		<texture>$INFO[ListItem(8).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(8).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(8).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(8).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(8).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(8).Title)]]]]</visible>
	</include>
	<include name="OverlayVisibility9">
		<texture>$INFO[ListItem(9).Overlay,thumbs/]</texture>
		<visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(9).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(9).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(9).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(9).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(9).Title)]]]]</visible>
	</include>
	<include name="ReloadWindowOnClick">
		<onclick condition="Window.IsActive(addonbrowser)">SetProperty(activewindow,addons,home)</onclick>
		<onclick condition="Window.IsActive(musicfiles)">SetProperty(activewindow,musicfiles,home)</onclick>
		<onclick condition="Window.IsActive(musiclibrary)">SetProperty(activewindow,musiclibrary,home)</onclick>
		<onclick condition="Window.IsActive(musicplaylist)">SetProperty(activewindow,musicplaylist,home)</onclick>
		<onclick condition="Window.IsActive(videoplaylist)">SetProperty(activewindow,videoplaylist,home)</onclick>
		<onclick condition="Window.IsActive(videos)">SetProperty(activewindow,videos,home)</onclick>
		<onclick condition="Window.IsActive(programs)">SetProperty(activewindow,programs,home)</onclick>
		<onclick>SetProperty(containerpath,$ESCINFO[Container.FolderPath],home)</onclick>
		<onclick>Dialog.Close(1126)</onclick>
		<onclick>ReplaceWindow(1141)</onclick>
	</include>
	<include name="ShowcaseInfoPaneMovies">
		<control type="group" id="7550">
			<posy>39</posy>
			<width>1920</width>
			<height>750</height>
			<visible>Window.IsActive(1112) | Control.IsVisible(197) | Control.HasFocus(7000) | Stringcompare(Control.GetLabel(4421),infopanelon)</visible>
			<visible>Control.IsVisible(9900)</visible>
			<visible>Control.IsVisible(508) | Control.IsVisible(503) | Control.IsVisible(509) | Control.IsVisible(501) | [Control.IsVisible(57) + Skin.HasSetting(smallshiftview)]</visible>
			<animation effect="slide" start="0,-1200" end="0,0" time="600" tween="cubic">VisibleChange</animation>
			<animation effect="slide" end="0,45" time="320" easing="inout" tween="cubic" condition="Control.IsVisible(503) | Control.IsVisible(508)">Conditional</animation>
			<animation effect="fade" time="200">WindowOpen</animation>
			<animation effect="slide" end="0,-1000" time="240" easing="in" tween="cubic">WindowClose</animation>
			<animation effect="slide" end="0,35" time="400" easing="in" tween="cubic" condition="!Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>
			<animation effect="slide" end="0,60" time="400" easing="in" tween="cubic" condition="[Control.IsVisible(57) + Skin.HasSetting(smallshiftview)]">Conditional</animation>
			<animation effect="slide" end="0,65" time="400" easing="in" tween="cubic" condition="!Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503) + [Skin.HasSetting(landscapelogo) | Skin.HasSetting(landscapeonelogo)] + [Container.Content(tvshows) | Container.Content(movies)]">Conditional</animation>
			<animation effect="zoom" end="113" center="960,500" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel)">Conditional</animation>
			<control type="group">
				<visible>!Skin.HasSetting(no_infopane_panel)</visible>
				<include>Animation_VisibleChange400</include>
				<control type="image">
					<posx>126</posx>
					<posy>5</posy>
					<width>1667</width>
					<height>920</height>
					<texture border="5">panel.png</texture>
					<colordiffuse>$VAR[PanelColorVar]</colordiffuse>
				</control>
			</control>
			<control type="image">
				<posx>128</posx>
				<posy>13</posy>
				<width>1661</width>
				<height>730</height>
				<texture>$VAR[InfoPanelLayoutVar]</texture>
				<colordiffuse>$VAR[PanelColorVar]</colordiffuse>
				<fadetime>400</fadetime>
			</control>
			<control type="image">
				<posx>165</posx>
				<posy>100</posy>
				<width>1600</width>
				<height>280</height>
				<aspectratio>keep</aspectratio>
				<texture background="true">$VAR[LogoVar]</texture>
				<fadetime>300</fadetime>
				<animation effect="fade" start="100" end="17" time="40" condition="true">Conditional</animation>
				<visible>![[Container.Content(tvshows) | Container.Content(movies) | Container.Content(artists)] + Control.IsVisible(503) + [Skin.HasSetting(landscapelogo) | Skin.HasSetting(landscapeonelogo)]]</visible>
				<visible>!Control.isVisible(8822)</visible>
				<animation type="Conditional" condition="Stringcompare(Control.GetLabel(4420),fanart) | Container.Content(seasons) | Container.Content(episodes)">
					<effect type="slide" end="-480,160" time="0" />
					<effect type="zoom" start="100" end="83" time="0" tween="cubic" easing="inout" center="auto" />
				</animation>
				<include>Animation_VisibleChange400</include>
			</control>
			<control type="image">
				<posx>1747</posx>
				<posy>15</posy>
				<width>45</width>
				<height>45</height>
				<texture>$VAR[WatchedIconVar]</texture>
				<colordiffuse>$VAR[PanelColorVar]</colordiffuse>
				<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png) | Container.ListItem.IsResumable</visible>
			</control>
			<control type="image">
				<posx>136</posx>
				<posy>20</posy>
				<width>32</width>
				<height>32</height>
				<texture background="true">$VAR[CountryFlagVar]</texture>
				<colordiffuse>fade</colordiffuse>
			</control>
			<control type="group">
				<visible>Container.Content(movies)</visible>
				<visible>!Skin.HasSetting(no_infopane_panel)</visible>
				<include>Animation_VisibleChange400</include>
				<control type="label">
					<posx>170</posx>
					<posy>12</posy>
					<width>1580</width>
					<height>42</height>
					<align>center</align>
					<label>$VAR[LandscapeLogoPanelLabelVar]</label>
					<textcolor>$VAR[FontColorVar]</textcolor>
					<scroll>true</scroll>
				</control>
			</control>
			<control type="image">
				<posx>909</posx>
				<posy>69</posy>
				<width>798</width>
				<height>454</height>
				<aspectratio align="center">scale</aspectratio>
				<texture background="true" fallback="fallback.jpg">$VAR[FanartTextureVar]</texture>
				<fadetime>FanartCrossfadeTime</fadetime>
				<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
				<bordersize>7</bordersize>
				<animation effect="zoom" end="108" center="1800,270" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>
				<visible>StringCompare(Control.GetLabel(4420),fanart)</visible>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="320" time="160" />
				</animation>
			</control>
			<control type="group">
				<posx>158</posx>
				<posy>74</posy>
				<visible>StringCompare(Control.GetLabel(4420),fanart) | StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
				<animation effect="slide" end="472,0" time="0" easing="inout" tween="cubic" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<animation effect="fade" start="100" end="0" time="880" condition="Player.HasVideo + StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="320" time="160" />
				</animation>
				<control type="grouplist">
					<orientation>vertical</orientation>
					<posy>-4</posy>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail1Var]</label>
						<textcolor>$VAR[FontColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue1Var]</label>
						<textcolor>grey</textcolor>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail3Var]</label>
						<textcolor>$VAR[FontColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue3Var]</label>
						<textcolor>grey</textcolor>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail5Var]</label>
						<textcolor>$VAR[FontColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue5Var]</label>
						<textcolor>grey</textcolor>
						<scroll>true</scroll>
					</control>
				</control>
				<control type="grouplist">
					<orientation>vertical</orientation>
					<posy>-4</posy>
					<posx>352</posx>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail2Var]</label>
						<textcolor>$VAR[FontColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue2Var]</label>
						<textcolor>grey</textcolor>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail4Var]</label>
						<textcolor>$VAR[FontColorVar]</textcolor>
					</control>
					<control type="fadelabel">
						<width>300</width>
						<height>47</height>
						<label>$LOCALIZE[13409] #$INFO[ListItem.Top250]</label>
						<textcolor>grey</textcolor>
						<label>$INFO[ListItem.RatingAndVotes]</label>
						<scrollspeed>200</scrollspeed>
						<pauseatend>3000</pauseatend>
						<visible>!IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue4Var]</label>
						<textcolor>grey</textcolor>
						<scroll>true</scroll>
						<visible>IsEmpty(ListItem.Top250)</visible>
					</control>
					<control type="label">
						<width>420</width>
						<height>22</height>
						<label>$VAR[FanartPanelDetail6Var]</label>
						<textcolor>$VAR[FontColorVar]</textcolor>
					</control>
					<control type="label">
						<width>300</width>
						<height>47</height>
						<label fallback="31006">$VAR[FanartPanelValue6Var]</label>
						<textcolor>grey</textcolor>
						<scroll>true</scroll>
					</control>
				</control>
				<control type="textbox">
					<posy>209</posy>
					<width>652</width>
					<height>249</height>
					<label>$VAR[FanartPanelPlotVar]</label>
					<textcolor>grey</textcolor>
					<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)</visible>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="320" time="160" />
				</animation>
				<control type="image">
					<posx>1400</posx>
					<posy>63</posy>
					<width>323</width>
					<height>470</height>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<texture background="true" diffuse="thumbs/movieposter_mask.png">$VAR[ListPosterVar]</texture>
					<fadetime>200</fadetime>
					<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
					<bordersize>7</bordersize>
					<visible>StringCompare(Control.GetLabel(4420),poster)</visible>
				</control>
				<control type="group">
					<posx>158</posx>
					<posy>71</posy>
					<control type="grouplist">
						<orientation>vertical</orientation>
						<posy>0</posy>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[FanartPanelDetail1Var]</label>
							<textcolor>$VAR[FontColorVar]</textcolor>
						</control>
						<control type="label">
							<aligny>top</aligny>
							<width>420</width>
							<font>Font_Reg28</font>
							<height>44</height>
							<label fallback="31006">$VAR[FanartPanelValue1Var]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<width>420</width>
							<font>Font_Reg28</font>
							<height>22</height>
							<label>$VAR[FanartPanelDetail2Var]</label>
							<textcolor>$VAR[FontColorVar]</textcolor>
						</control>
						<control type="label">
							<width>420</width>
							<height>44</height>
							<font>Font_Reg28</font>
							<aligny>top</aligny>
							<label fallback="31006">$VAR[FanartPanelValue2Var]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[PosterPanelDetail3Var]</label>
							<textcolor>$VAR[FontColorVar]</textcolor>
						</control>
						<control type="label">
							<width>420</width>
							<height>44</height>
							<font>Font_Reg28</font>
							<aligny>top</aligny>
							<label fallback="31006">$VAR[PosterPanelValue3Var]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[FanartPanelDetail4Var]</label>
							<textcolor>$VAR[FontColorVar]</textcolor>
						</control>
						<control type="fadelabel">
							<width>422</width>
							<height>44</height>
							<font>Font_Reg28</font>
							<aligny>top</aligny>
							<label fallback="31006">$VAR[PosterPanelValue4Var]</label>
							<pauseatend>3000</pauseatend>
						</control>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[PosterPanelDetail5Var]</label>
							<textcolor>$VAR[FontColorVar]</textcolor>
						</control>
						<control type="label">
							<width>300</width>
							<height>44</height>
							<font>Font_Reg28</font>
							<aligny>top</aligny>
							<label fallback="31006">$VAR[PosterPanelValue5Var]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[PosterPanelDetail6Var]</label>
							<textcolor>$VAR[FontColorVar]</textcolor>
						</control>
						<control type="label">
							<width>420</width>
							<height>44</height>
							<font>Font_Reg28</font>
							<aligny>top</aligny>
							<label fallback="31006">$VAR[PosterPanelValue6Var]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<width>420</width>
							<height>22</height>
							<font>Font_Reg28</font>
							<label>$VAR[PosterPanelDetail7Var]</label>
							<textcolor>$VAR[FontColorVar]</textcolor>
						</control>
						<control type="label">
							<width>420</width>
							<height>44</height>
							<aligny>top</aligny>
							<font>Font_Reg28</font>
							<label fallback="31452">$VAR[PosterPanelValue7Var]</label>
							<scroll>true</scroll>
						</control>
					</control>
					<control type="textbox" id="5777">
						<posx>480</posx>
						<posy>-9</posy>
						<width>657</width>
						<height>393</height>
						<label fallback="31006">$VAR[FanartPanelPlotVar]</label>
						<animation effect="fade" start="100" end="0" time="880" condition="Player.HasVideo">Conditional</animation>
						<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
						<visible>!Control.IsVisible(503)</visible>
						<visible>[[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]]</visible>
					</control>
					<control type="textbox">
						<posx>486</posx>
						<posy>-9</posy>
						<width>657</width>
						<height>460</height>
						<label fallback="31006">$VAR[FanartPanelPlotVar]</label>
						<animation effect="fade" start="100" end="0" time="880" condition="Player.HasVideo">Conditional</animation>
						<autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
						<visible>!Control.IsVisible(5777)</visible>
					</control>
				</control>
			</control>
			<control type="group">
				<visible>Container.Content(movies)</visible>
				<control type="group">
					<posx>155</posx>
					<visible>StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
					<animation type="VisibleChange">
						<effect type="fade" end="100" delay="320" time="160" />
					</animation>
					<control type="image">
						<posy>62</posy>
						<width>391</width>
						<height>220</height>
						<aspectratio>keep</aspectratio>
						<texture fallback="fallback.png" background="true">$VAR[ExtraThumb3Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
					<control type="image">
						<posy>315</posy>
						<width>391</width>
						<height>220</height>
						<aspectratio>keep</aspectratio>
						<texture fallback="fallback.png" background="true">$VAR[ExtraThumb4Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
				</control>
				<control type="group">
					<posx>1363</posx>
					<visible>SubString(Control.GetLabel(4420),thumbs)</visible>
					<animation type="VisibleChange">
						<effect type="fade" end="100" delay="320" time="160" />
					</animation>
					<control type="image">
						<posy>62</posy>
						<width>391</width>
						<height>220</height>
						<aspectratio>keep</aspectratio>
						<texture fallback="fallback.png" background="true">$VAR[ExtraThumb1Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
					<control type="image">
						<posy>315</posy>
						<width>391</width>
						<height>220</height>
						<aspectratio>keep</aspectratio>
						<texture fallback="fallback.png" background="true">$VAR[ExtraThumb2Var]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
				</control>
			</control>
			<control type="group">
				<visible>Container.Content(tvshows) + StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
				<animation type="VisibleChange">
					<effect type="fade" end="100" delay="320" time="160" />
				</animation>
				<control type="group">
					<posx>155</posx>
					<control type="image">
						<posy>62</posy>
						<width>391</width>
						<height>220</height>
						<aspectratio align="center">keep</aspectratio>
						<texture>$VAR[InfoPanelCharacterArtVar]</texture>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<posy>315</posy>
						<width>391</width>
						<height>220</height>
						<aspectratio aligny="top">scale</aspectratio>
						<texture fallback="fallback.png" background="true">$INFO[ListItem.Art(fanart)]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
				</control>
				<control type="group">
					<posx>1363</posx>
					<control type="image">
						<posy>62</posy>
						<width>391</width>
						<height>220</height>
						<aspectratio aligny="top">keep</aspectratio>
						<texture fallback="fallback.png" background="true">$INFO[ListItem.Art(clearart)]</texture>
						<fadetime>400</fadetime>
						<bordersize>7</bordersize>
					</control>
					<control type="image">
						<posy>315</posy>
						<width>391</width>
						<height>220</height>
						<aspectratio aligny="top">keep</aspectratio>
						<texture fallback="fallback.png" background="true">$INFO[ListItem.Art(landscape)]</texture>
						<fadetime>400</fadetime>
						<bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
						<bordersize>7</bordersize>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>915</posx>
				<posy>75</posy>
				<animation effect="slide" end="-348,-22" reversible="false" condition="StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)">Conditional</animation>
				<animation effect="zoom" center="auto" start="100" end="92" time="480" tween="back" reversible="false" condition="StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)">Conditional</animation>
				<animation effect="slide" end="-358,-38" reversible="false" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<animation effect="zoom" center="auto" start="100" end="88" time="480" tween="back" reversible="false" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
				<visible>Player.HasVideo</visible>
				<animation effect="fade" end="100" time="0" delay="880">Visible</animation>
				<control type="image">
					<width>786</width>
					<height>442</height>
					<texture>common/black.png</texture>
				</control>
				<control type="videowindow" id="2">
					<width>786</width>
					<height>442</height>
				</control>
			</control>
		</control>
	</include>
</includes>
