<?xml version="1.0" encoding="utf-8"?>
<window>
	<defaultcontrol always="true">9004</defaultcontrol>
	<include condition="!Skin.HasSetting(setup-0.2.3)">AutoConfig</include>
	<onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + [Substring(Skin.String(widgetlist),random) | Substring(Skin.String(widget2list),random) | Substring(Skin.String(backgroundlist),random)]">SetProperty(SkinWidgets_RandomItems_Update,true)</onload>
	<onload>ClearProperty(DontRunTVShowScripts,Home)</onload>
	<onload>AlarmClock(WidgetMove,Control.Move(8000,1),00:07,silent,loop)</onload>
	<onload>AlarmClock(Widget2Move,Control.Move(7000,1),00:07,silent,loop)</onload>
	<onload>AlarmClock(HomeTileLeft,Control.Move(5001,1),00:07,silent,loop)</onload>
	<onload>AlarmClock(HomeTileRight,Control.Move(5003,1),00:10,silent,loop)</onload>
	<onload>AlarmClock(HomeTileMid,Control.Move(5002,1),00:15,silent,loop)</onload>
	<onload>AlarmClock(HomeTile2Left,Control.Move(6001,1),00:07,silent,loop)</onload>
	<onload>AlarmClock(HomeTile2Right,Control.Move(6003,1),00:10,silent,loop)</onload>
	<onload>AlarmClock(HomeTile2Mid,Control.Move(6002,1),00:15,silent,loop)</onload>
	<onunload>CancelAlarm(AutoMusicInfoPanel,true)</onunload>
	<onunload>CancelAlarm(HomeTileLeft,true)</onunload>
	<onunload>CancelAlarm(HomeTileRight,true)</onunload>
	<onunload>CancelAlarm(HomeTileMid,true)</onunload>
	<onunload>CancelAlarm(HomeTile2Left,true)</onunload>
	<onunload>CancelAlarm(HomeTile2Right,true)</onunload>
	<onunload>CancelAlarm(HomeTile2Mid,true)</onunload>
	<onunload>CancelAlarm(WidgetMove,true)</onunload>
	<onunload>CancelAlarm(Widget2Move,true)</onunload>
	<onunload>ClearProperty(PanelWidgetInfo,Home)</onunload>
	<onunload>ClearProperty(PanelWidget2Info,Home)</onunload>
	<allowoverlay>yes</allowoverlay>
	<controls>
		<control type="button" id="9004">
			<include>HiddenObject</include>
			<onfocus condition="Window.Previous(startup) + !IsEmpty(Skin.String(CustomFocusOffset))">$VAR[HomeCustomStartupFocus]</onfocus>
			<onfocus>SetFocus(9000)</onfocus>
			<onleft>SetFocus(9000)</onleft>
			<onright>SetFocus(9000)</onright>
			<ondown>SetFocus(9000)</ondown>
			<onup>SetFocus(9000)</onup>
			<onclick>SetFocus(9000)</onclick>
		</control>
		<control type="button" id="9006">
			<include>HiddenObject</include>
			<onfocus>SetFocus(9000)</onfocus>
			<onfocus condition="Stringcompare(Container(9000).ListItem.Property(Path),ActivateWindow(Videos,MovieTitles,return)) | Stringcompare(Container(9000).ListItem.Property(Path),ActivateWindow(Videos,MusicVideoTitles,return)) | Substring(Container(9000).ListItem.Property(Path),videodb://movies/)">SetProperty(DontRunTVShowScripts,True,Home)</onfocus>
			<onfocus condition="stringcompare(Container(9000).ListItem.Property(Type),0) | stringcompare(Container(9000).ListItem.Property(Type),1) | stringcompare(Container(9000).ListItem.Property(Type),2) | stringcompare(Container(9000).ListItem.Property(Type),3)">RunAddon($INFO[Container(9000).ListItem.Property(Path)])</onfocus>
			<onfocus condition="stringcompare(Container(9000).ListItem.Property(Type),4)">ActivateWindow(Videos,$ESCINFO[Container(9000).ListItem.Property(Path)],return)</onfocus>
			<onfocus condition="stringcompare(Container(9000).ListItem.Property(Type),5) + Library.HasContent(Music)">ActivateWindow(MusicLibrary,$ESCINFO[Container(9000).ListItem.Property(Path)],return)</onfocus>
			<onfocus condition="stringcompare(Container(9000).ListItem.Property(Type),5) + !Library.HasContent(Music)">ActivateWindow(MusicFiles)</onfocus>
			<onfocus condition="stringcompare(Container(9000).ListItem.Property(Type),6) | Stringcompare(Container(9000).ListItem.Property(Type),7) | Stringcompare(Container(9000).ListItem.Property(Type),custom)">$INFO[Container(9000).ListItem.Property(Path)]</onfocus>
		</control>
		<control type="button" id="9007">
			<include>HiddenObject</include>
			<onfocus condition="Control.IsVisible(5000)">SetFocus(5010)</onfocus>
			<onfocus condition="Control.IsVisible(5000) + [Stringcompare(Container(5010).ListItem.Property(Path),ActivateWindow(Videos,MovieTitles,return)) | Stringcompare(Container(5010).ListItem.Property(Path),ActivateWindow(Videos,MusicVideoTitles,return)) | Substring(Container(5010).ListItem.Property(Path),videodb://movies/)]">SetProperty(DontRunTVShowScripts,True,Home)</onfocus>
			<onfocus condition="Control.IsVisible(5000) + [stringcompare(Container(5010).ListItem.Property(Type),0) | stringcompare(Container(5010).ListItem.Property(Type),1) | stringcompare(Container(5010).ListItem.Property(Type),2) | stringcompare(Container(5010).ListItem.Property(Type),3)]">RunAddon($INFO[Container(5010).ListItem.Property(Path)])</onfocus>
			<onfocus condition="Control.IsVisible(5000) + stringcompare(Container(5010).ListItem.Property(Type),4)">ActivateWindow(Videos,$ESCINFO[Container(5010).ListItem.Property(Path)],return)</onfocus>
			<onfocus condition="Control.IsVisible(5000) + stringcompare(Container(5010).ListItem.Property(Type),5) + Library.HasContent(Music)">ActivateWindow(MusicLibrary,$ESCINFO[Container(5010).ListItem.Property(Path)],return)</onfocus>
			<onfocus condition="Control.IsVisible(5000) + stringcompare(Container(5010).ListItem.Property(Type),5) + !Library.HasContent(Music)">ActivateWindow(MusicFiles)</onfocus>
			<onfocus condition="Control.IsVisible(5000) + [stringcompare(Container(5010).ListItem.Property(Type),6) | Stringcompare(Container(5010).ListItem.Property(Type),7) | Stringcompare(Container(5010).ListItem.Property(Type),custom)]">$INFO[Container(5010).ListItem.Property(Path)]</onfocus>
			<onfocus condition="Control.IsVisible(5000) + IsEmpty(Container(5010).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
			<onfocus condition="Control.IsVisible(8998)">SetFocus(8000)</onfocus>
			<onfocus condition="Control.IsVisible(8998) + [Stringcompare(Container(8000).ListItem.Property(Path),ActivateWindow(Videos,MovieTitles,return)) | Stringcompare(Container(8000).ListItem.Property(Path),ActivateWindow(Videos,MusicVideoTitles,return)) | Substring(Container(8000).ListItem.Property(Path),videodb://movies/)]">SetProperty(DontRunTVShowScripts,True,Home)</onfocus>
			<onfocus condition="Control.IsVisible(8998) + [stringcompare(Container(8000).ListItem.Property(Type),0) | stringcompare(Container(8000).ListItem.Property(Type),1) | stringcompare(Container(8000).ListItem.Property(Type),2) | stringcompare(Container(8000).ListItem.Property(Type),3)]">RunAddon($INFO[Container(8000).ListItem.Property(Path)])</onfocus>
			<onfocus condition="Control.IsVisible(8998) + stringcompare(Container(8000).ListItem.Property(Type),4)">ActivateWindow(Videos,$ESCINFO[Container(8000).ListItem.Property(Path)],return)</onfocus>
			<onfocus condition="Control.IsVisible(8998) + stringcompare(Container(8000).ListItem.Property(Type),5) + Library.HasContent(Music)">ActivateWindow(MusicLibrary,$ESCINFO[Container(8000).ListItem.Property(Path)],return)</onfocus>
			<onfocus condition="Control.IsVisible(8998) + stringcompare(Container(8000).ListItem.Property(Type),5) + !Library.HasContent(Music)">ActivateWindow(MusicFiles)</onfocus>
			<onfocus condition="Control.IsVisible(8998) + [stringcompare(Container(8000).ListItem.Property(Type),6) | Stringcompare(Container(8000).ListItem.Property(Type),7) | Stringcompare(Container(8000).ListItem.Property(Type),custom)]">$INFO[Container(8000).ListItem.Property(Path)]</onfocus>
			<onfocus condition="Control.IsVisible(8998) + IsEmpty(Container(8000).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
		</control>
		<control type="button" id="9008">
			<include>HiddenObject</include>
			<onfocus>SetFocus(6010)</onfocus>
			<onfocus condition="Control.IsVisible(6000)">SetFocus(6010)</onfocus>
			<onfocus condition="Control.IsVisible(6000) + [Stringcompare(Container(6010).ListItem.Property(Path),ActivateWindow(Videos,MovieTitles,return)) | Stringcompare(Container(6010).ListItem.Property(Path),ActivateWindow(Videos,MusicVideoTitles,return)) | Substring(Container(6010).ListItem.Property(Path),videodb://movies/)]">SetProperty(DontRunTVShowScripts,True,Home)</onfocus>
			<onfocus condition="Control.IsVisible(6000) + [stringcompare(Container(6010).ListItem.Property(Type),0) | stringcompare(Container(6010).ListItem.Property(Type),1) | stringcompare(Container(6010).ListItem.Property(Type),2) | stringcompare(Container(6010).ListItem.Property(Type),3)]">RunAddon($INFO[Container(6010).ListItem.Property(Path)])</onfocus>
			<onfocus condition="Control.IsVisible(6000) + stringcompare(Container(6010).ListItem.Property(Type),4)">ActivateWindow(Videos,$ESCINFO[Container(6010).ListItem.Property(Path)],return)</onfocus>
			<onfocus condition="Control.IsVisible(6000) + stringcompare(Container(6010).ListItem.Property(Type),5) + Library.HasContent(Music)">ActivateWindow(MusicLibrary,$ESCINFO[Container(6010).ListItem.Property(Path)],return)</onfocus>
			<onfocus condition="Control.IsVisible(6000) + stringcompare(Container(6010).ListItem.Property(Type),5) + !Library.HasContent(Music)">ActivateWindow(MusicFiles)</onfocus>
			<onfocus condition="Control.IsVisible(6000) + [stringcompare(Container(6010).ListItem.Property(Type),6) | Stringcompare(Container(6010).ListItem.Property(Type),7) | Stringcompare(Container(6010).ListItem.Property(Type),custom)]">$INFO[Container(6010).ListItem.Property(Path)]</onfocus>
			<onfocus condition="Control.IsVisible(6000) + IsEmpty(Container(6010).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
			<onfocus condition="Control.IsVisible(7998)">SetFocus(7000)</onfocus>
			<onfocus condition="Control.IsVisible(7998) + [Stringcompare(Container(7000).ListItem.Property(Path),ActivateWindow(Videos,MovieTitles,return)) | Stringcompare(Container(7000).ListItem.Property(Path),ActivateWindow(Videos,MusicVideoTitles,return)) | Substring(Container(7000).ListItem.Property(Path),videodb://movies/)]">SetProperty(DontRunTVShowScripts,True,Home)</onfocus>
			<onfocus condition="Control.IsVisible(7998) + [stringcompare(Container(7000).ListItem.Property(Type),0) | stringcompare(Container(7000).ListItem.Property(Type),1) | stringcompare(Container(7000).ListItem.Property(Type),2) | stringcompare(Container(7000).ListItem.Property(Type),3)]">RunAddon($INFO[Container(7000).ListItem.Property(Path)])</onfocus>
			<onfocus condition="Control.IsVisible(7998) + stringcompare(Container(7000).ListItem.Property(Type),4)">ActivateWindow(Videos,$ESCINFO[Container(7000).ListItem.Property(Path)],return)</onfocus>
			<onfocus condition="Control.IsVisible(7998) + stringcompare(Container(7000).ListItem.Property(Type),5) + Library.HasContent(Music)">ActivateWindow(MusicLibrary,$ESCINFO[Container(7000).ListItem.Property(Path)],return)</onfocus>
			<onfocus condition="Control.IsVisible(7998) + stringcompare(Container(7000).ListItem.Property(Type),5) + !Library.HasContent(Music)">ActivateWindow(MusicFiles)</onfocus>
			<onfocus condition="Control.IsVisible(7998) + [stringcompare(Container(7000).ListItem.Property(Type),6) | Stringcompare(Container(7000).ListItem.Property(Type),7) | Stringcompare(Container(7000).ListItem.Property(Type),custom)]">$INFO[Container(7000).ListItem.Property(Path)]</onfocus>
			<onfocus condition="Control.IsVisible(7998) + IsEmpty(Container(7000).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
		</control>
		<control type="button" id="9009">
			<include>HiddenObject</include>
			<onfocus>AlarmClock(WidgetMove,Control.Move(8000,1),00:07,silent,loop)</onfocus>
			<onfocus>AlarmClock(Widget2Move,Control.Move(7000,1),00:07,silent,loop)</onfocus>
			<onfocus>SetFocus(9000)</onfocus>
		</control>
		<control type="button" id="5014">
			<include>HiddenObject</include>
			<onfocus>SetProperty(WidgetType,$INFO[Control.GetLabel(4321)],home)</onfocus>
			<onfocus>SetProperty(WidgetPosition,Widget1,home)</onfocus>
			<onfocus>SetProperty(Label,$ESCINFO[Container(8000).ListItem.Label])</onfocus>
			<onfocus>SetProperty(Path,$ESCINFO[Container(8000).ListItem.Property(Path)])</onfocus>
			<onfocus>SetProperty(PercentPlayed,$ESCINFO[Container(8000).ListItem.Property(PercentPlayed)])</onfocus>
			<onfocus>SetProperty(Id,$ESCINFO[Container(8000).ListItem.Property(Id)])</onfocus>
			<onfocus>SetProperty(Media,$ESCINFO[Container(8000).ListItem.Property(Media)])</onfocus>
			<onfocus>SetProperty(DBID,$ESCINFO[Container(8000).ListItem.Property(DBID)])</onfocus>
			<onfocus>SetProperty(Trailer,$ESCINFO[Container(8000).ListItem.Property(Trailer)])</onfocus>
			<onfocus condition="Substring(Control.GetLabel(4321),images)">SetFocus(22222)</onfocus>
			<onfocus condition="!Substring(Control.GetLabel(4321),images)">SetFocus(8020)</onfocus>
			<visible>Substring(Control.GetLabel(4321),classic)</visible>
		</control>
		<control type="button" id="5014">
			<include>HiddenObject</include>
			<onfocus condition="!Substring(Control.GetLabel(4321),images)">SetProperty(PanelWidgetInfo,true,home)</onfocus>
			<onfocus>SetProperty(WidgetPosition,Widget1,home)</onfocus>
			<onfocus>SetProperty(WidgetType,$INFO[Control.GetLabel(4321)],home)</onfocus>
			<onfocus>SetProperty(Label,$ESCINFO[Container(5010).ListItem.Label])</onfocus>
			<onfocus>SetProperty(Label2,$ESCINFO[Container(5010).ListItem.Label2])</onfocus>
			<onfocus>SetProperty(Icon,$ESCINFO[Container(5010).ListItem.Icon])</onfocus>
			<onfocus>SetProperty(Fanart,$ESCINFO[Container(5010).ListItem.Property(Fanart)])</onfocus>
			<onfocus>SetProperty(Thumb,$ESCINFO[Container(5010).ListItem.Thumb])</onfocus>
			<onfocus>SetProperty(Path,$ESCINFO[Container(5010).ListItem.Property(Path)])</onfocus>
			<onfocus>SetProperty(Poster,$ESCINFO[Container(5010).ListItem.Property(Poster)])</onfocus>
			<onfocus>SetProperty(Logo,$ESCINFO[Container(5010).ListItem.Property(Logo)])</onfocus>
			<onfocus>SetProperty(ClearArt,$ESCINFO[Container(5010).ListItem.Property(ClearArt)])</onfocus>
			<onfocus>SetProperty(Landscape,$ESCINFO[Container(5010).ListItem.Property(Landscape)])</onfocus>
			<onfocus>SetProperty(Banner,$ESCINFO[Container(5010).ListItem.Property(Banner)])</onfocus>
			<onfocus>SetProperty(CharacterArt,$ESCINFO[Container(5010).ListItem.Property(CharacterArt)])</onfocus>
			<onfocus>SetProperty(Discart,$ESCINFO[Container(5010).ListItem.Property(Discart)])</onfocus>
			<onfocus>SetProperty(Year,$ESCINFO[Container(5010).ListItem.Property(Year)])</onfocus>
			<onfocus>SetProperty(Plot,$ESCINFO[Container(5010).ListItem.Property(Plot)])</onfocus>
			<onfocus>SetProperty(Tagline,$ESCINFO[Container(5010).ListItem.Property(Tagline)])</onfocus>
			<onfocus>SetProperty(OriginalTitle,$ESCINFO[Container(5010).ListItem.Property(OriginalTitle)])</onfocus>
			<onfocus>SetProperty(RunningTime,$ESCINFO[Container(5010).ListItem.Property(RunningTime)])</onfocus>
			<onfocus>SetProperty(Director,$ESCINFO[Container(5010).ListItem.Property(Director)])</onfocus>
			<onfocus>SetProperty(Artist,$ESCINFO[Container(5010).ListItem.Property(Artist)])</onfocus>
			<onfocus>SetProperty(Rating,$ESCINFO[Container(5010).ListItem.Property(Rating)])</onfocus>
			<onfocus>SetProperty(StatusID,$ESCINFO[Container(5010).ListItem.Property(StatusID)])</onfocus>
			<onfocus>SetProperty(Status,$ESCINFO[Container(5010).ListItem.Property(Status)])</onfocus>
			<onfocus>SetProperty(NextTitle,$ESCINFO[Container(5010).ListItem.Property(NextTitle)])</onfocus>
			<onfocus>SetProperty(LatestTitle,$ESCINFO[Container(5010).ListItem.Property(LatestTitle)])</onfocus>
			<onfocus>SetProperty(LatestDate,$ESCINFO[Container(5010).ListItem.Property(LatestDate)])</onfocus>
			<onfocus>SetProperty(Studio,$ESCINFO[Container(5010).ListItem.Property(Studio)])</onfocus>
			<onfocus>SetProperty(Country,$ESCINFO[Container(5010).ListItem.Property(Country)])</onfocus>
			<onfocus>SetProperty(Network,$ESCINFO[Container(5010).ListItem.Property(Network)])</onfocus>
			<onfocus>SetProperty(PercentPlayed,$ESCINFO[Container(5010).ListItem.Property(PercentPlayed)])</onfocus>
			<onfocus>SetProperty(AudioChannels,$ESCINFO[Container(5010).ListItem.Property(AudioChannels)])</onfocus>
			<onfocus>SetProperty(AudioCodec,$ESCINFO[Container(5010).ListItem.Property(AudioCodec)])</onfocus>
			<onfocus>SetProperty(VideoCodec,$ESCINFO[Container(5010).ListItem.Property(VideoCodec)])</onfocus>
			<onfocus>SetProperty(VideoAspect,$ESCINFO[Container(5010).ListItem.Property(VideoAspect)])</onfocus>
			<onfocus>SetProperty(VideoResolution,$ESCINFO[Container(5010).ListItem.Property(VideoResolution)])</onfocus>
			<onfocus>SetProperty(extrafanart,$ESCINFO[Container(5010).ListItem.Property(extrafanart)])</onfocus>
			<onfocus>SetProperty(extrathumb,$ESCINFO[Container(5010).ListItem.Property(extrathumb)])</onfocus>
			<onfocus>SetProperty(mpaa,$ESCINFO[Container(5010).ListItem.Property(mpaa)])</onfocus>
			<onfocus>SetProperty(Id,$ESCINFO[Container(5010).ListItem.Property(Id)])</onfocus>
			<onfocus>SetProperty(Media,$ESCINFO[Container(5010).ListItem.Property(Media)])</onfocus>
			<onfocus>SetProperty(Channel,$ESCINFO[Container(5010).ListItem.Property(Channel)])</onfocus>
			<onfocus>SetProperty(Date,$ESCINFO[Container(5010).ListItem.Property(Date)])</onfocus>
			<onfocus>SetProperty(Publisher,$ESCINFO[Container(5010).ListItem.Property(Publisher)])</onfocus>
			<onfocus>SetProperty(Description,$ESCINFO[Container(5010).ListItem.Property(Description)])</onfocus>
			<onfocus>SetProperty(Genre,$ESCINFO[Container(5010).ListItem.Property(Genre)])</onfocus>
			<onfocus>SetProperty(RecordLabel,$ESCINFO[Container(5010).ListItem.Property(RecordLabel)])</onfocus>
			<onfocus>SetProperty(Premiered,$ESCINFO[Container(5010).ListItem.Property(Premiered)])</onfocus>
			<onfocus>SetProperty(Folder,$ESCINFO[Container(5010).ListItem.Property(Folder)])</onfocus>
			<onfocus>SetProperty(EpisodeNumber,$ESCINFO[Container(5010).ListItem.Property(EpisodeNumber)])</onfocus>
			<onfocus>SetProperty(Version,$ESCINFO[Container(5010).ListItem.Property(Version)])</onfocus>
			<onfocus>SetProperty(DBID,$ESCINFO[Container(5010).ListItem.Property(DBID)])</onfocus>
			<onfocus>SetProperty(Trailer,$ESCINFO[Container(5010).ListItem.Property(Trailer)])</onfocus>
			<onfocus>SetProperty(Mood,$ESCINFO[Container(5010).ListItem.Property(Mood)],home)</onfocus>
			<onfocus>SetProperty(Style,$ESCINFO[Container(5010).ListItem.Property(Style)],home)</onfocus>
			<onfocus>SetProperty(Theme,$ESCINFO[Container(5010).ListItem.Property(Theme)],home)</onfocus>
			<onfocus>SetProperty(Instrument,$ESCINFO[Container(5010).ListItem.Property(Instrument)],home)</onfocus>
			<onfocus>SetProperty(Born,$ESCINFO[Container(5010).ListItem.Property(Born)],home)</onfocus>
			<onfocus>SetProperty(Died,$ESCINFO[Container(5010).ListItem.Property(Died)],home)</onfocus>
			<onfocus>SetProperty(Formed,$ESCINFO[Container(5010).ListItem.Property(Formed)],home)</onfocus>
			<onfocus>SetProperty(Disbanded,$ESCINFO[Container(5010).ListItem.Property(Disbanded)],home)</onfocus>
			<onfocus>SetProperty(YearsActive,$ESCINFO[Container(5010).ListItem.Property(YearsActive)],home)</onfocus>
			<onfocus>SetProperty(Watched,$ESCINFO[Container(5010).ListItem.Property(Watched)],home)</onfocus>
			<onfocus>SetProperty(Writer,$ESCINFO[Container(5010).ListItem.Property(Writer)],home)</onfocus>
			<onfocus>SetProperty(Top250,$INFO[Container(5010).ListItem.Property(Top250)],home)</onfocus>
			<onfocus condition="Substring(Control.GetLabel(4321),images)">SetFocus(22222)</onfocus>
			<onfocus condition="!Substring(Control.GetLabel(4321),images)">SetFocus(5055)</onfocus>
			<visible>!Substring(Control.GetLabel(4321),classic)</visible>
		</control>
		<control type="button" id="6014">
			<include>HiddenObject</include>
			<onfocus>SetProperty(WidgetType,$INFO[Control.GetLabel(4325)],home)</onfocus>
			<onfocus>SetProperty(WidgetPosition,Widget2,home)</onfocus>
			<onfocus>SetProperty(Label,$ESCINFO[Container(7000).ListItem.Label])</onfocus>
			<onfocus>SetProperty(Path,$ESCINFO[Container(7000).ListItem.Property(Path)])</onfocus>
			<onfocus>SetProperty(PercentPlayed,$ESCINFO[Container(7000).ListItem.Property(PercentPlayed)])</onfocus>
			<onfocus>SetProperty(Id,$ESCINFO[Container(7000).ListItem.Property(Id)])</onfocus>
			<onfocus>SetProperty(Media,$ESCINFO[Container(7000).ListItem.Property(Media)])</onfocus>
			<onfocus>SetProperty(DBID,$ESCINFO[Container(7000).ListItem.Property(DBID)])</onfocus>
			<onfocus>SetProperty(Trailer,$ESCINFO[Container(7000).ListItem.Property(Trailer)])</onfocus>
			<onfocus condition="Substring(Control.GetLabel(4325),images)">SetFocus(22222)</onfocus>
			<onfocus condition="!Substring(Control.GetLabel(4325),images)">SetFocus(7020)</onfocus>
			<visible>Substring(Control.GetLabel(4325),classic)</visible>
		</control>
		<control type="button" id="6014">
			<include>HiddenObject</include>
			<onfocus condition="!Substring(Control.GetLabel(4325),images)">SetProperty(PanelWidget2Info,true,home)</onfocus>
			<onfocus>SetProperty(WidgetPosition,Widget2,home)</onfocus>
			<onfocus>SetProperty(WidgetType,$INFO[Control.GetLabel(4325)],home)</onfocus>
			<onfocus>SetProperty(Label,$ESCINFO[Container(6010).ListItem.Label])</onfocus>
			<onfocus>SetProperty(Label2,$ESCINFO[Container(6010).ListItem.Label2])</onfocus>
			<onfocus>SetProperty(Icon,$ESCINFO[Container(6010).ListItem.Icon])</onfocus>
			<onfocus>SetProperty(Fanart,$ESCINFO[Container(6010).ListItem.Property(Fanart)])</onfocus>
			<onfocus>SetProperty(Thumb,$ESCINFO[Container(6010).ListItem.Thumb])</onfocus>
			<onfocus>SetProperty(Path,$ESCINFO[Container(6010).ListItem.Property(Path)])</onfocus>
			<onfocus>SetProperty(Poster,$ESCINFO[Container(6010).ListItem.Property(Poster)])</onfocus>
			<onfocus>SetProperty(Logo,$ESCINFO[Container(6010).ListItem.Property(Logo)])</onfocus>
			<onfocus>SetProperty(ClearArt,$ESCINFO[Container(6010).ListItem.Property(ClearArt)])</onfocus>
			<onfocus>SetProperty(Landscape,$ESCINFO[Container(6010).ListItem.Property(Landscape)])</onfocus>
			<onfocus>SetProperty(Banner,$ESCINFO[Container(6010).ListItem.Property(Banner)])</onfocus>
			<onfocus>SetProperty(CharacterArt,$ESCINFO[Container(6010).ListItem.Property(CharacterArt)])</onfocus>
			<onfocus>SetProperty(Discart,$ESCINFO[Container(6010).ListItem.Property(Discart)])</onfocus>
			<onfocus>SetProperty(Year,$ESCINFO[Container(6010).ListItem.Property(Year)])</onfocus>
			<onfocus>SetProperty(Plot,$ESCINFO[Container(6010).ListItem.Property(Plot)])</onfocus>
			<onfocus>SetProperty(Tagline,$ESCINFO[Container(6010).ListItem.Property(Tagline)])</onfocus>
			<onfocus>SetProperty(OriginalTitle,$ESCINFO[Container(6010).ListItem.Property(OriginalTitle)])</onfocus>
			<onfocus>SetProperty(RunningTime,$ESCINFO[Container(6010).ListItem.Property(RunningTime)])</onfocus>
			<onfocus>SetProperty(Director,$ESCINFO[Container(6010).ListItem.Property(Director)])</onfocus>
			<onfocus>SetProperty(Artist,$ESCINFO[Container(6010).ListItem.Property(Artist)])</onfocus>
			<onfocus>SetProperty(Rating,$ESCINFO[Container(6010).ListItem.Property(Rating)])</onfocus>
			<onfocus>SetProperty(StatusID,$ESCINFO[Container(6010).ListItem.Property(StatusID)])</onfocus>
			<onfocus>SetProperty(Status,$ESCINFO[Container(6010).ListItem.Property(Status)])</onfocus>
			<onfocus>SetProperty(NextTitle,$ESCINFO[Container(6010).ListItem.Property(NextTitle)])</onfocus>
			<onfocus>SetProperty(LatestTitle,$ESCINFO[Container(6010).ListItem.Property(LatestTitle)])</onfocus>
			<onfocus>SetProperty(LatestDate,$ESCINFO[Container(6010).ListItem.Property(LatestDate)])</onfocus>
			<onfocus>SetProperty(Studio,$ESCINFO[Container(6010).ListItem.Property(Studio)])</onfocus>
			<onfocus>SetProperty(Country,$ESCINFO[Container(6010).ListItem.Property(Country)])</onfocus>
			<onfocus>SetProperty(Network,$ESCINFO[Container(6010).ListItem.Property(Network)])</onfocus>
			<onfocus>SetProperty(PercentPlayed,$ESCINFO[Container(6010).ListItem.Property(PercentPlayed)])</onfocus>
			<onfocus>SetProperty(AudioChannels,$ESCINFO[Container(6010).ListItem.Property(AudioChannels)])</onfocus>
			<onfocus>SetProperty(AudioCodec,$ESCINFO[Container(6010).ListItem.Property(AudioCodec)])</onfocus>
			<onfocus>SetProperty(VideoCodec,$ESCINFO[Container(6010).ListItem.Property(VideoCodec)])</onfocus>
			<onfocus>SetProperty(VideoAspect,$ESCINFO[Container(6010).ListItem.Property(VideoAspect)])</onfocus>
			<onfocus>SetProperty(VideoResolution,$ESCINFO[Container(6010).ListItem.Property(VideoResolution)])</onfocus>
			<onfocus>SetProperty(extrafanart,$ESCINFO[Container(6010).ListItem.Property(extrafanart)])</onfocus>
			<onfocus>SetProperty(extrathumb,$ESCINFO[Container(6010).ListItem.Property(extrathumb)])</onfocus>
			<onfocus>SetProperty(mpaa,$ESCINFO[Container(6010).ListItem.Property(mpaa)])</onfocus>
			<onfocus>SetProperty(Id,$ESCINFO[Container(6010).ListItem.Property(Id)])</onfocus>
			<onfocus>SetProperty(Media,$ESCINFO[Container(6010).ListItem.Property(Media)])</onfocus>
			<onfocus>SetProperty(Channel,$ESCINFO[Container(6010).ListItem.Property(Channel)])</onfocus>
			<onfocus>SetProperty(Date,$ESCINFO[Container(6010).ListItem.Property(Date)])</onfocus>
			<onfocus>SetProperty(Publisher,$ESCINFO[Container(6010).ListItem.Property(Publisher)])</onfocus>
			<onfocus>SetProperty(Description,$ESCINFO[Container(6010).ListItem.Property(Description)])</onfocus>
			<onfocus>SetProperty(Genre,$ESCINFO[Container(6010).ListItem.Property(Genre)])</onfocus>
			<onfocus>SetProperty(RecordLabel,$ESCINFO[Container(6010).ListItem.Property(RecordLabel)])</onfocus>
			<onfocus>SetProperty(Premiered,$ESCINFO[Container(6010).ListItem.Property(Premiered)])</onfocus>
			<onfocus>SetProperty(Folder,$ESCINFO[Container(6010).ListItem.Property(Folder)])</onfocus>
			<onfocus>SetProperty(EpisodeNumber,$ESCINFO[Container(6010).ListItem.Property(EpisodeNumber)])</onfocus>
			<onfocus>SetProperty(Version,$ESCINFO[Container(6010).ListItem.Property(Version)])</onfocus>
			<onfocus>SetProperty(DBID,$ESCINFO[Container(6010).ListItem.Property(DBID)])</onfocus>
			<onfocus>SetProperty(Trailer,$ESCINFO[Container(6010).ListItem.Property(Trailer)])</onfocus>
			<onfocus>SetProperty(Mood,$ESCINFO[Container(6010).ListItem.Property(Mood)],home)</onfocus>
			<onfocus>SetProperty(Style,$ESCINFO[Container(6010).ListItem.Property(Style)],home)</onfocus>
			<onfocus>SetProperty(Theme,$ESCINFO[Container(6010).ListItem.Property(Theme)],home)</onfocus>
			<onfocus>SetProperty(Instrument,$ESCINFO[Container(6010).ListItem.Property(Instrument)],home)</onfocus>
			<onfocus>SetProperty(Born,$ESCINFO[Container(6010).ListItem.Property(Born)],home)</onfocus>
			<onfocus>SetProperty(Died,$ESCINFO[Container(6010).ListItem.Property(Died)],home)</onfocus>
			<onfocus>SetProperty(Formed,$ESCINFO[Container(6010).ListItem.Property(Formed)],home)</onfocus>
			<onfocus>SetProperty(Disbanded,$ESCINFO[Container(6010).ListItem.Property(Disbanded)],home)</onfocus>
			<onfocus>SetProperty(YearsActive,$ESCINFO[Container(6010).ListItem.Property(YearsActive)],home)</onfocus>
			<onfocus>SetProperty(Watched,$ESCINFO[Container(6010).ListItem.Property(Watched)],home)</onfocus>
			<onfocus>SetProperty(Writer,$ESCINFO[Container(6010).ListItem.Property(Writer)],home)</onfocus>
			<onfocus>SetProperty(Top250,$ESCINFO[Container(6010).ListItem.Property(Top250)],home)</onfocus>
			<onfocus condition="Substring(Control.GetLabel(4325),images)">SetFocus(22222)</onfocus>
			<onfocus condition="!Substring(Control.GetLabel(4325),images)">SetFocus(5055)</onfocus>
			<visible>!Substring(Control.GetLabel(4321),classic)</visible>
		</control>
		<include>MainMenuCommonContent</include>
		<!-- Fanart -->
		<control type="group">
			<control type="multiimage">
				<aspectratio align="center" aligny="top">scale</aspectratio>
				<imagepath background="true" fallback="special://skin/background/">$VAR[HomeMainFanartVar]</imagepath>
				<fadetime>600</fadetime>
				<animation effect="fade" time="480">Visible</animation>
				<animation effect="fade" time="480">Hidden</animation>
				<animation effect="zoom" start="110" end="130" center="auto" time="12000" pulse="true" delay="480" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
				<animation effect="slide" start="-15,-15" end="15,15" time="6000" pulse="true" delay="480" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
				<visible>!Substring(Control.GetLabel(4322),case)</visible>
			</control>
			<control type="image">
				<aspectratio align="center" aligny="top">scale</aspectratio>
				<texture background="true" fallback="special://skin/background/default.jpg">$INFO[Skin.String(LiveBG)]</texture>
				<fadetime>600</fadetime>
				<include>FullscreenDimensions</include>
				<include>Animation_WindowFade250</include>
				<animation effect="fade" time="400">Visible</animation>
				<animation effect="fade" time="400">Hidden</animation>
				<visible>Substring(Control.GetLabel(4322),case)</visible>
			</control>
			<include condition="SubString(Skin.String(backgroundlist),dvdcase)">InteractiveCasesBackground</include>
			<include condition="SubString(Skin.String(backgroundlist), case)">LiveCDCasesbackground</include>
			<include condition="[Skin.HasSetting(homecdwall) | SubString(Skin.String(backgroundlist),cdwall)] + !IsEmpty(Skin.String(CDWall_Folder_Path))">cdwall-musicvisualisation</include>
			<include condition="SubString(Skin.String(backgroundlist),moviewall)">MovieWall</include>
			<control type="image">
				<aspectratio align="center" aligny="top">scale</aspectratio>
				<texture background="true">$VAR[HomeWidgetFanartVar]</texture>
				<fadetime>600</fadetime>
				<include>FullscreenDimensions</include>
				<visible>[Control.HasFocus(8000) | Control.HasFocus(8020) | Control.HasFocus(7000) | Control.HasFocus(7020) | ControlGroup(5000).HasFocus | ControlGroup(6000).HasFocus] | [Player.HasAudio + Skin.HasSetting(musicfanarthome)]</visible>
				<animation effect="fade" time="480">Visible</animation>
				<animation effect="fade" time="480">Hidden</animation>
				<animation effect="zoom" start="110" end="130" center="auto" time="12000" pulse="true" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
				<animation effect="slide" start="-15,-15" end="15,15" time="6000" pulse="true" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
			</control>
			<!-- Music ExtraFanart -->
			<include condition="!IsEmpty(Skin.String(ArtistsLogosPath))">MusicExtraFanartHome</include>
			<include condition="Skin.HasSetting(artistslideshowhome)">MusicArtistSlideshowHome</include>
			<include>CommonMediaPlayingBackground</include>
			<include>BackgroundDiffuse</include>
		</control>
		<include>RSSPanel</include>
		<control type="group">
			<animation effect="slide" end="0,330" time="560" tween="cubic" delay="160" condition="!Skin.HasSetting(lowermainmenu) + !IsEmpty(Window(home).Property(PanelWidget2Info))">Conditional</animation>
			<animation effect="slide" end="0,-330" time="560" tween="cubic" delay="160" condition="!Skin.HasSetting(lowermainmenu) + !IsEmpty(Window(home).Property(PanelWidgetInfo))">Conditional</animation>
			<control type="group">
				<posy>468</posy>
				<include>TimePanel</include>
			</control>
			<!-- RSS -->
			<control type="group">
				<include>FullscreenDimensions</include>
				<animation effect="slide" end="0,338" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(lowermainmenu)">Conditional</animation>
				<include>Animation_OpenCloseZoom</include>
				<control type="group">
					<animation effect="zoom" end="80" center="960,520" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
					<!-- Submenu -->
					<control type="image">
						<posx>935</posx>
						<posy>613</posy>
						<width>50</width>
						<height>15</height>
						<texture>submenu-arrow.png</texture>
						<colordiffuse>white</colordiffuse>
						<visible>Control.HasFocus(9000) + !Skin.HasSetting(showsubmenu) + IntegerGreaterThan(Container(9010).NumItems,0)</visible>
						<animation effect="zoom" start="100,0" end="100,100" time="400" delay="160" tween="cubic" center="0,613" easing="inout">VisibleChange</animation>
					</control>
					<control type="group" id="9001">
						<posx>240</posx>
						<posy>609</posy>
						<width>1260</width>
						<height>52</height>
						<animation effect="zoom" end="120" center="960,610" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
						<animation effect="fade" start="100" end="0" time="240" condition="!Control.HasFocus(9010) + ![IntegerGreaterThan(Container(9010).NumItems,0) + Skin.HasSetting(showsubmenu)]">conditional</animation>
						<animation effect="zoom" start="240,609,1260,52" end="240,609,1260,1" time="240" tween="cubic" easing="inout" condition="!Control.HasFocus(9010) + ![IntegerGreaterThan(Container(9010).NumItems,0) + Skin.HasSetting(showsubmenu)]">conditional</animation>
						<control type="image">
							<posx>90</posx>
							<posy>3</posy>
							<width>1260</width>
							<height>52</height>
							<texture border="57,0,57,6">submenu.png</texture>
						</control>
						<include condition="Skin.HasSetting(submenufixedlist)">SubMenuFixedList</include>
						<include condition="!Skin.HasSetting(submenufixedlist)">SubMenuWrapList</include>
					</control>
					<control type="button">
						<posx>0</posx>
						<posy>600</posy>
						<width>1920</width>
						<height>100</height>
						<texturefocus>-</texturefocus>
						<texturenofocus>-</texturenofocus>
						<label>-</label>
						<font>-</font>
						<hitrect x="0" y="610" w="1920" h="100" />
						<onfocus>SetFocus(9010)</onfocus>
						<visible>!Control.HasFocus(9010)</visible>
					</control>
					<!-- Home OSD -->
					<control type="group">
						<posy>62</posy>
						<width>1920</width>
						<height>1080</height>
						<visible>Player.HasMedia + System.IdleTime(8)</visible>
						<animation effect="zoom" end="125,100" center="960,500" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
						<animation effect="fade" end="100" time="600" condition="Player.HasAudio + System.IdleTime(8)">Conditional</animation>
						<control type="progress">
							<posy>452</posy>
							<width>1920</width>
							<height>96</height>
							<info>Player.Progress</info>
							<texturebg>dialogs/progress/progress_clear.png</texturebg>
							<lefttexture>-</lefttexture>
							<midtexture colordiffuse="$VAR[FontColorVar]">dialogs/progress/progress_mid_large.png</midtexture>
							<righttexture>-</righttexture>
							<animation effect="fade" end="30" condition="true">Conditional</animation>
						</control>
					</control>
					<!-- Home Menu Bar -->
					<control type="image">
						<posy>510</posy>
						<width>1920</width>
						<height>104</height>
						<texture border="0,6,0,0">menu-bar.png</texture>
						<colordiffuse>$VAR[PanelColorVar]</colordiffuse>
						<animation effect="zoom" end="125,100" center="960,500" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
						<animation effect="fade" start="100" end="0" time="320" reversible="true" condition="!Control.HasFocus(9000)">Conditional</animation>
					</control>
					<control type="image">
						<posy>442</posy>
						<width>1920</width>
						<height>241</height>
						<texture border="1,75,1,75">homemenu-bar-shadow.png</texture>
						<colordiffuse>$VAR[PanelColorVar]</colordiffuse>
						<animation effect="zoom" end="125,100" center="960,500" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
					</control>
					<!-- Home OSD -->
					<control type="label">
						<posy>445</posy>
						<width>1920</width>
						<height>225</height>
						<align>center</align>
						<label>$VAR[HomeOSDLabelVar]</label>
						<font>Font_MainClassic</font>
						<textcolor>white</textcolor>
						<visible>Player.HasMedia + System.IdleTime(8)</visible>
						<animation effect="fade" end="100" time="840">Visible</animation>
					</control>
					<!-- Home Menu -->
					<control type="button" id="8993">
						<include>HiddenObject</include>
						<onfocus>AlarmClock(WidgetMove,Control.Move(8000,1),00:07,silent,loop)</onfocus>
						<onfocus>ClearProperty(PanelWidgetInfo,Home)</onfocus>
						<onfocus>SetFocus(9000)</onfocus>
					</control>
					<control type="button" id="7993">
						<include>HiddenObject</include>
						<onfocus>AlarmClock(Widget2Move,Control.Move(7000,1),00:07,silent,loop)</onfocus>
						<onfocus>SetFocus(9000)</onfocus>
					</control>
					<!--focus first widget-->
					<control type="button" id="4444">
						<include>HiddenObject</include>
						<onfocus condition="Control.IsVisible(5000)">SetFocus(5000)</onfocus>
						<onfocus>SetProperty(WidgetPosition,Widget1,home)</onfocus>
						<onfocus condition="Control.IsVisible(8998)">CancelAlarm(WidgetMove,true)</onfocus>
						<onfocus condition="Control.IsVisible(8998)">SetFocus(8000,0)</onfocus>
						<onfocus condition="Control.IsVisible(8998)">SetFocus(8000)</onfocus>
						<visible>Control.IsVisible(5000) | Control.IsVisible(8998)</visible>
						<visible>IsEmpty(Window(home).Property(DisableWidgets))</visible>
						<visible>!Substring(Control.GetLabel(4321),system)</visible>
					</control>
					<!--focus second widget-->
					<control type="button" id="4445">
						<include>HiddenObject</include>
						<onfocus>SetProperty(WidgetPosition,Widget2,home)</onfocus>
						<onfocus condition="Control.IsVisible(6000)">SetFocus(6000)</onfocus>
						<onfocus condition="Control.IsVisible(7998)">CancelAlarm(Widget2Move,true)</onfocus>
						<onfocus condition="Control.IsVisible(7998)">SetFocus(7000,0)</onfocus>
						<onfocus condition="Control.IsVisible(7998)">SetFocus(7000)</onfocus>
						<visible>Control.IsVisible(6000) | Control.IsVisible(7998)</visible>
						<visible>IsEmpty(Window(home).Property(DisableWidgets))</visible>
						<visible>!Substring(Control.GetLabel(4325),system)</visible>
					</control>
					<include condition="Skin.HasSetting(mainmenufixedlist)">MainMenuFixedList</include>
					<include condition="!Skin.HasSetting(mainmenufixedlist)">MainMenuWrapList</include>
					<control type="image">
						<posx>1650</posx>
						<posy>516</posy>
						<width>270</width>
						<height>98</height>
						<texture>menu-bar-highlight.png</texture>
						<colordiffuse>$VAR[PanelColorVar]</colordiffuse>
						<animation effect="zoom" end="125,100" center="960,500" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
						<animation effect="fade" start="100" end="30" time="320" reversible="true" condition="!Control.HasFocus(9000)">Conditional</animation>
					</control>
				</control>
			</control>
		</control>
		<!-- Featured widget -->
		<control type="group">
			<visible>IsEmpty(Window(home).Property(PanelWidget2Info))</visible>
			<animation type="Visible">
				<effect type="zoom" delay="400" start="150" end="100" center="960,540" time="400" tween="cubic" />
				<effect type="fade" delay="400" end="100" time="240" />
			</animation>
			<animation type="Hidden">
				<effect type="fade" start="100" end="0" time="240" />
				<effect type="zoom" start="100" end="130" center="960,540" time="240" tween="cubic" easing="in" />
			</animation>
			<include condition="Substring(Skin.String(widgetlist),featured) | Substring(Skin.String(widgetlist),panel)">HomePanelWidget</include>
			<include condition="!IsEmpty(Weather.Plugin) + SubString(Skin.String(widgetlist),weather)">Weather_Widget</include>
			<include>RecentWidget</include>
		</control>
		<control type="group">
			<visible>IsEmpty(Window(home).Property(PanelWidgetInfo))</visible>
			<animation type="Visible">
				<effect type="zoom" delay="400" start="150" end="100" center="960,540" time="400" tween="cubic" />
				<effect type="fade" delay="400" end="100" time="240" />
			</animation>
			<animation type="Hidden">
				<effect type="fade" start="100" end="0" time="240" />
				<effect type="zoom" start="100" end="130" center="960,540" time="240" tween="cubic" easing="in" />
			</animation>
			<include condition="Substring(Skin.String(widget2list),featured) | Substring(Skin.String(widget2list),panel)">HomePanelWidget2</include>
			<include condition="!IsEmpty(Weather.Plugin) + SubString(Skin.String(widget2list),weather)">Weather_Widget2</include>
			<include>RecentWidget2</include>
		</control>
		<control type="group">
			<posx>135</posx>
			<include>Animation_OpenCloseZoom</include>
			<posy>389</posy>
			<width>1920</width>
			<height>825</height>
			<animation type="Conditional" condition="true">
				<effect type="zoom" start="100" end="97" center="960,540" time="240" tween="cubic" />
			</animation>
			<animation effect="slide" end="0,285" time="0" tween="cubic" easing="inout" condition="!Skin.HasSetting(lowermainmenu) + Stringcompare(Window(home).Property(WidgetPosition),Widget1)">Conditional</animation>
			<animation effect="slide" end="0,18" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(lowermainmenu) + [Skin.HasSetting(timehomehigh) + !Skin.HasSetting(DisableTimePanel)]">Conditional</animation>
			<animation effect="slide" end="0,-31" time="320" tween="cubic" easing="inout" condition="!Skin.HasSetting(lowermainmenu) + Skin.HasSetting(rsshomelow) + !Skin.HasSetting(DisableRSS)">Conditional</animation>
			<visible>!IsEmpty(Window(home).Property(WidgetType))</visible>
			<visible>[!IsEmpty(Window(home).Property(PanelWidgetInfo)) | !IsEmpty(Window(home).Property(PanelWidget2Info))]</visible>
			<animation type="Visible" reversible="false" condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">
				<include condition="Skin.HasSetting(lowermainmenu)">Animation_LargePanelFlipUp1</include>
				<include condition="!Skin.HasSetting(lowermainmenu)">Animation_LargePanelFlipDown1</include>
			</animation>
			<animation type="Hidden" reversible="false">
				<include condition="Skin.HasSetting(lowermainmenu)">Animation_LargePanelFlipDown2</include>
				<include condition="!Skin.HasSetting(lowermainmenu)">Animation_LargePanelFlipUp2</include>
			</animation>
			<animation type="Visible" reversible="false" condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">
				<include>Animation_LargePanelFlipUp1</include>
			</animation>
			<include>WidgetInfoPanel</include>
		</control>
		<include condition="!Skin.HasSetting(nohomepageMusicinfo) | !Skin.HasSetting(homepageVideoinfo)">Furniture_HomeNowPlaying</include>
		<control type="group">
			<posx>0</posx>
			<posy>40</posy>
			<visible>!IsEmpty(Window(home).Property(DisableWidgets)) + !Player.HasMedia</visible>
			<include>Animation_WindowFade200</include>
			<animation type="Visible">
				<effect type="zoom" start="150" end="100" center="960,40" time="400" tween="cubic" />
				<effect type="fade" end="100" time="240" />
			</animation>
			<animation type="Hidden">
				<effect type="fade" start="100" end="0" time="240" />
				<effect type="zoom" start="100" end="130" center="960,40" time="240" tween="cubic" easing="in" />
			</animation>
			<control type="image">
				<posx>0</posx>
				<posy>6</posy>
				<width>65</width>
				<height>49</height>
				<aspectratio aligny="top">scale</aspectratio>
				<texture>BigIcons/ButtonBack.png</texture>
				<animation effect="zoom" start="80" end="85" delay="400" time="840" center="auto" tween="cubic" easing="out" pulse="true" condition="true">Conditional</animation>
				<colordiffuse>white</colordiffuse>
			</control>
			<control type="image">
				<posx>50</posx>
				<posy>10</posy>
				<width>50</width>
				<height>38</height>
				<aspectratio aligny="top">scale</aspectratio>
				<animation effect="fade" start="100" end="80" time="440" delay="800" center="auto" tween="cubic" easing="out" pulse="true" condition="true">Conditional</animation>
				<texture>BigIcons/widgets.png</texture>
				<colordiffuse>fade</colordiffuse>
			</control>
		</control>
		<control type="group">
			<control type="image">
				<texture>common/bgcolor.png</texture>
				<include>FullscreenDimensions</include>
				<visible>Control.HasFocus(22222) | !IsEmpty(Window(home).Property(weatherwidget))</visible>
				<include>Animation_VisibleChange400</include>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$VAR[HomeFSImageVar]</texture>
				<fadetime>600</fadetime>
				<include>FullscreenDimensions</include>
				<animation effect="fade" time="320">VisibleChange</animation>
				<visible>Control.HasFocus(22222)</visible>
			</control>
			<control type="group">
				<visible>!IsEmpty(Window(home).Property(weatherwidget))</visible>
				<control type="multiimage">
					<aligny>center</aligny>
					<aspectratio>keep</aspectratio>
					<imagepath>$INFO[Window(weather).Property(MapPath)]</imagepath>
					<fadetime>0</fadetime>
					<include>FullscreenDimensions</include>
					<timeperimage>500</timeperimage>
					<pauseatend>1000</pauseatend>
					<randomize>false</randomize>
				</control>
				<control type="image">
					<posx>500</posx>
					<posy>990</posy>
					<width>920</width>
					<height>47</height>
					<texture>weather/whitepanel.png</texture>
				</control>
				<control type="image">
					<posx>480</posx>
					<posy>992</posy>
					<width>506</width>
					<height>42</height>
					<aspectratio>keep</aspectratio>
					<texture>weather/key1.png</texture>
				</control>
				<control type="image">
					<posx>930</posx>
					<posy>992</posy>
					<width>506</width>
					<height>42</height>
					<aspectratio>keep</aspectratio>
					<texture>weather/key2.png</texture>
				</control>
			</control>
			<control type="button" id="7654">
				<posx>20</posx>
				<posy>1000</posy>
				<width>80</width>
				<height>80</height>
				<texturefocus>shutdown-focus.png</texturefocus>
				<texturenofocus>shutdown-nofocus.png</texturenofocus>
				<include>Animation_OpenCloseZoom</include>
				<animation effect="slide" end="0,-30" time="320" tween="cubic" easing="inout" condition="Skin.HasSetting(rsshomelow)">Conditional</animation>
				<onup>9000</onup>
				<ondown>9000</ondown>
				<onleft>9000</onleft>
				<onright>9000</onright>
				<onclick>ActivateWindow(shutdownmenu)</onclick>
			</control>
			<control type="button" id="22222">
				<include>HiddenObject</include>
				<onleft condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">Control.Move(5010,-1)</onleft>
				<onright condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">Control.Move(5010,1)</onright>
				<onup condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">SetFocus(5010)</onup>
				<ondown condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">SetFocus(5010)</ondown>
				<onback condition="Stringcompare(Window(home).Property(WidgetPosition),Widget1)">SetFocus(5010)</onback>
				<onleft condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">Control.Move(6010,-1)</onleft>
				<onright condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">Control.Move(6010,1)</onright>
				<onup condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">SetFocus(6010)</onup>
				<ondown condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">SetFocus(6010)</ondown>
				<onback condition="Stringcompare(Window(home).Property(WidgetPosition),Widget2)">SetFocus(6010)</onback>
			</control>
		</control>
	</controls>
</window>
